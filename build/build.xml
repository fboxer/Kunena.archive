<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<!--
  Kunena ant build file

  @version      $Id$
  @package		Kunena
  @subpackage	com_kunena
  @copyright	Copyright (C) 2008 - 2011 Kunena Team. All rights reserved..
  				portions (C) 2007 MjazTools. All rights reserved..
  @license		GNU General Public License <http://www.gnu.org/copyleft/gpl.html>
  @link			http://www.kunena.org
  
  The following parameters can be defined inside the Eclipse build task as Arguments. They
  allow the build file to be platform independent as not path information resides within
  any of the build files.

  Parameters: (with default values - adjust the directories in Eclispe to your individual setup)
  	-Dproject_dir=..				(= workspace/kunena)
  	-Dpackage_dir=../../packages	(= workspace/packages)
  	-Dtmp_dir=tmp					(= workspace/kunena/build/tmp)
  	-Dbuild_dir=package				(= workspace/kunena/build/package)
-->
<project name="Kunena" default="dist" basedir=".">
	<description>Ant Build File for Kunena</description>
	<condition property="project_dir" value="..">
		<not><isset property="project_dir" /></not>
	</condition>
	<condition property="package_dir" value="../../packages">
		<not><isset property="package_dir" /></not>
	</condition>
	<condition property="tmp_dir" value="tmp">
		<not><isset property="tmp_dir" /></not>
	</condition>
	<condition property="build_dir" value="package">
		<not><isset property="build_dir" /></not>
	</condition>
	<property file="build.config.ini" />
	<property name="kunena.frontend" value="components/com_kunena" />
	<property name="kunena.backend" value="administrator/components/com_kunena" />
	<property name="kunena.media" value="media/kunena" />

	<target name="dist" depends="mkdir,archive_old,init,build,minify,copy,info,cleanup" />

	<target name="mkdir">
		<mkdir dir="${tmp_dir}" />
		<mkdir dir="${build_dir}" />
		<mkdir dir="${package_dir}" />
		<mkdir dir="${package_dir}/archive" />
	</target>

	<target name="archive_old">
		<move todir="${package_dir}/archive" preservelastmodified="yes" includeEmptyDirs="no">
			<fileset dir="${package_dir}">
				<exclude name="archive/" />
			</fileset>
		</move>
	</target>

	<target name="init" depends="mkdir">
		<!--
		YUI Compressor implementation
		See link below for details, documentations and samples
		http://javaflight.blogspot.com/2008/01/introducing-yui-compressor-ant-task.html
		-->
		<taskdef name="yui-compressor" classname="net.noha.tools.ant.yuicompressor.tasks.YuiCompressorTask">
			<classpath>
				<pathelement path="${project_dir}/build/lib/yuicompressor-2.4.2.jar" />
				<pathelement path="${project_dir}/build/lib/yui-compressor-ant-task-0.5.jar" />
			</classpath>
		</taskdef>

		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${project_dir}/build/lib/ant-contrib-1.0b3.jar"/>
			</classpath>
		</taskdef>

		<xmlproperty file="${project_dir}/${kunena.backend}/${cfg.name}.xml" collapseAttributes="true" prefix="xml" keepRoot="false" />
		<buildnumber />
		<tstamp>
			<format property="str.datefmt" pattern="${cfg.datefmt}" locale="${cfg.dateloc}" />
		</tstamp>
		<condition property="version.date" value="${str.datefmt}" else="">
			<istrue value="${cfg.adddate}" />
		</condition>
		<condition property="str.build" value="_${cfg.buildprefix}${build.number}" else="">
			<istrue value="${cfg.addbuild}" />
		</condition>
		<condition property="str.version" value="_${cfg.versionprefix}${xml.version}" else="">
			<istrue value="${cfg.addversion}" />
		</condition>
		<condition property="str.date" value="_${str.datefmt}" else="">
			<istrue value="${cfg.adddate}" />
		</condition>
		<property name="str.destfile" value="${package_dir}/${cfg.prefix}${cfg.name}${str.version}${str.build}${str.date}" />

		<condition property="do.tar">
			<istrue value="${cfg.tar}" />
		</condition>
		<condition property="do.zip">
			<istrue value="${cfg.zip}" />
		</condition>
		<condition property="do.gzip">
			<istrue value="${cfg.gzip}" />
		</condition>
		<condition property="do.bz2">
			<istrue value="${cfg.bz2}" />
		</condition>

		<copy todir="${tmp_dir}/administrator">
			<fileset dir="${project_dir}/administrator">
				<exclude name="components/com_kunena/language/**"/>
			</fileset>
		</copy>	
		<copy todir="${tmp_dir}/components">
			<fileset dir="${project_dir}/components">
				<exclude name="com_kunena/language/**"/>
				<exclude name="com_kunena/template/**/params.ini"/>
			</fileset>
		</copy>	
		<copy todir="${tmp_dir}/media">
			<fileset dir="${project_dir}/media" />
		</copy>	
		<copy todir="${tmp_dir}">
			<fileset file="${project_dir}/README.txt" />
		</copy>	
	</target>

	<target name="build" depends="init">
		<!-- Move files that contain version tags again and perform token replacement -->
		<filter token="kunenaversion" value="${xml.version}" />
		<filter token="kunenaversiondate" value="${version.date}" />
		<filter token="kunenaversionbuild" value="${build.number}" />
		<filter token="kunenaversionname" value="${xml.versionname}" />

		<move file="${tmp_dir}/${kunena.backend}/${cfg.name}.xml" todir="${build_dir}" overwrite="true" filtering="true" />
		<move file="${tmp_dir}/${kunena.backend}/${cfg.name}.j16.xml" todir="${build_dir}" overwrite="true" filtering="true" />
		<move file="${tmp_dir}/${kunena.frontend}/COPYRIGHT.php" todir="${build_dir}" overwrite="true" filtering="true" />
		<move file="${tmp_dir}/${kunena.frontend}/CHANGELOG.php" todir="${build_dir}" overwrite="true" filtering="false" />
		<move file="${tmp_dir}/README.txt" todir="${build_dir}" overwrite="true" filtering="true" />
		<copy file="${project_dir}/${kunena.frontend}/lib/kunena.defines.php" todir="${tmp_dir}/${kunena.frontend}/lib" overwrite="true" filtering="true" />
		<copy file="${project_dir}/${kunena.backend}/libraries/api.php" todir="${tmp_dir}/${kunena.backend}/libraries" overwrite="true" filtering="true" />
		<copy file="${project_dir}/${kunena.frontend}/template/default/template.xml" todir="${tmp_dir}/${kunena.frontend}/template/default" overwrite="true" filtering="true" />		
		<copy file="${project_dir}/${kunena.frontend}/template/example/template.xml" todir="${tmp_dir}/${kunena.frontend}/template/example" overwrite="true" filtering="true" />		

		<!-- Move files needed by the installer -->
		<move file="${tmp_dir}/${kunena.backend}/install/entrypoints/api.php" todir="${build_dir}" overwrite="true" filtering="true" />
		<move file="${tmp_dir}/${kunena.backend}/install/entrypoints/admin.kunena.php" todir="${build_dir}" overwrite="true" filtering="flse" />
		<move file="${tmp_dir}/${kunena.backend}/install/entrypoints/kunena.php" todir="${build_dir}" overwrite="true" filtering="false" />
		<move file="${tmp_dir}/${kunena.backend}/install/entrypoints/router.php" todir="${build_dir}" overwrite="true" filtering="false" />
		<move file="${tmp_dir}/${kunena.backend}/install/system/kunena.xml" todir="${build_dir}/install/system" overwrite="true" filtering="true" />
		<move file="${tmp_dir}/${kunena.backend}/install/system/kunena.j16.xml" todir="${build_dir}/install/system" overwrite="true" filtering="true" />
		<move file="${tmp_dir}/${kunena.backend}/install/kunena.install.upgrade.xml" todir="${build_dir}/install" overwrite="true" filtering="true" />
		<move todir="${build_dir}">
			<fileset dir="${tmp_dir}/${kunena.backend}">
				<include name="*install*"/>
				<include name="install/**"/>
			</fileset>
		</move>
		<!-- Rename component entry files so that they replace the old ones just before the end of the installation process, thus keeping forum offline while installing. -->
		<move file="${tmp_dir}/${kunena.backend}/api.php" tofile="${tmp_dir}/${kunena.backend}/api.new.php" overwrite="true" filtering="true" />
		<move file="${tmp_dir}/${kunena.backend}/admin.kunena.php" tofile="${tmp_dir}/${kunena.backend}/admin.kunena.new.php" overwrite="true" filtering="false" />
		<move file="${tmp_dir}/${kunena.frontend}/kunena.php" tofile="${tmp_dir}/${kunena.frontend}/kunena.new.php" overwrite="true" filtering="false" />
		<move file="${tmp_dir}/${kunena.frontend}/router.php" tofile="${tmp_dir}/${kunena.frontend}/router.new.php" overwrite="true" filtering="false" />
		<move todir="${build_dir}/archive" includeEmptyDirs="no">
			<fileset dir="${tmp_dir}/${kunena.backend}/archive" />
		</move>
	</target>

	<target name="minify" depends="build">
		<yui-compressor warn="false" munge="true" charset="UTF-8" fromdir="${tmp_dir}/${kunena.frontend}" todir="${tmp_dir}/${kunena.frontend}">
			<include name="**/*.js" />
			<include name="**/*.css" />
		</yui-compressor>
	</target>
	
	<macrodef name="language">
		<attribute name="tag" default="en-GB"/>
		<sequential>
			<copy file="${project_dir}/${kunena.backend}/language/@{tag}/@{tag}.com_kunena.xml" todir="${tmp_dir}/languages/@{tag}/admin" overwrite="true" filtering="true" />
			<copy todir="${tmp_dir}/languages/@{tag}/admin" flatten="yes" includeEmptyDirs="no" overwrite="true">
				<fileset dir="${project_dir}/${kunena.backend}">
					<include name="**/@{tag}.*.ini"/>
				</fileset>
			</copy>
			<copy file="${project_dir}/${kunena.frontend}/language/@{tag}/@{tag}.com_kunena.xml" todir="${tmp_dir}/languages/@{tag}/site" overwrite="true" filtering="true" />
			<copy todir="${tmp_dir}/languages/@{tag}/site" flatten="yes" includeEmptyDirs="no" overwrite="true">
				<fileset dir="${project_dir}/${kunena.frontend}">
					<include name="**/@{tag}.*.ini"/>
				</fileset>
			</copy>
			<archive destfile="${build_dir}/archive/@{tag}.com_kunena-admin" basedir="${tmp_dir}/languages/@{tag}/admin"/>
			<archive destfile="${build_dir}/archive/@{tag}.com_kunena-site" basedir="${tmp_dir}/languages/@{tag}/site"/>
		</sequential>
	</macrodef>

	<macrodef name="archive">
		<attribute name="destfile"/>
		<attribute name="basedir"/>
		<sequential>
			<if>
				<equals arg1="${do.zip}" arg2="true" />
				<then>
					<echo file="${build_dir}/archive/fileformat">.zip</echo>
					<zip destfile="@{destfile}.zip" basedir="@{basedir}" excludes="**/*.tar,**/*.gz,**/*.bz2"/>
				</then>
			</if>
			<if>
				<equals arg1="${do.tar}" arg2="true" />
				<then>
					<echo file="${build_dir}/archive/fileformat">.tar</echo>
					<tar destfile="@{destfile}.tar" basedir="@{basedir}" compression="none" excludes="**/*.zip,**/*.gz,**/*.bz2" />
				</then>
			</if>
			<if>
				<equals arg1="${do.gzip}" arg2="true" />
				<then>
					<echo file="${build_dir}/archive/fileformat">.tar.gz</echo>
					<tar destfile="@{destfile}.tar.gz" basedir="@{basedir}" compression="gzip" excludes="**/*.zip,**/*.tar,**/*.bz2" />
				</then>
			</if>
			<if>
				<equals arg1="${do.bz2}" arg2="true" />
				<then>
					<echo file="${build_dir}/archive/fileformat">.tar.bz2</echo>
					<tar destfile="@{destfile}.tar.bz2" basedir="@{basedir}" compression="bzip2" excludes="**/*.zip,**/*.tar,**/*.gz" />
				</then>
			</if>
		</sequential>
	</macrodef>

	<target name="copy" depends="minify">
		<mkdir dir="${build_dir}/archive" />
		<language tag="ar-AA" />
		<language tag="ca-ES" />
		<language tag="cs-CZ" />
		<language tag="da-DK" />
		<language tag="de-DE" />
		<language tag="el-GR" />
		<language tag="en-GB" />
		<language tag="es-ES" />
        <language tag="fa-IR" />
		<language tag="fi-FI" />
		<language tag="fr-FR" />
		<language tag="hu-HU" />
		<language tag="id-ID" />
		<!--language tag="it-IT" /-->
		<!--language tag="ja-JP" /-->
		<language tag="lt-LT" />
		<language tag="mk-MK" />
		<language tag="nb-NO" />
		<language tag="nl-NL" />
		<language tag="pl-PL" />
		<!--language tag="pt-BR" /-->
		<!--language tag="pt-PT" /-->
		<language tag="ru-RU" />
		<!--language tag="sr-RS" /-->
		<!--language tag="sr-YU" /-->
		<!--language tag="sv-SE" /-->
		<language tag="th-TH" />
		<language tag="tr-TR" />
		<!--language tag="vi-VN" /-->
		<!--language tag="zh-CN" /-->
		<!--language tag="zh-TW" /-->
		<archive destfile="${build_dir}/archive/com_kunena-admin" basedir="${tmp_dir}/${kunena.backend}" />
		<archive destfile="${build_dir}/archive/com_kunena-site" basedir="${tmp_dir}/${kunena.frontend}" />
		<archive destfile="${build_dir}/archive/com_kunena-media" basedir="${tmp_dir}/${kunena.media}" />
		<archive destfile="${str.destfile}" basedir="${build_dir}" />
	</target>

	<target name="info" depends="copy">
		<echo message="Ant Version:     ${ant.version}" />
		<echo message="Project:         ${cfg.name}" />
		<echo message="XML Name:        ${xml.name}" />
		<echo message="XML Version:     ${xml.version}" />
		<echo message="XML Author:      ${xml.author}" />
		<echo message="XML Copyright:   ${xml.copyright}" />
		<echo message="XML License:     ${xml.license}" />
		<echo message="XML Description: ${xml.description}" />
		<echo message="Build:           ${build.number}" />
		<echo message="Date:            ${TODAY}" />
	</target>

	<target name="cleanup" depends="info">
		<delete dir="${tmp_dir}" />
		<delete dir="${build_dir}" />
	</target>
</project>